include:
  - '/.ci/gitlab/common.yml'
  - '/.ci/gitlab/publish.yml'
#   - '/.ci/gitlab/benchmark.yml'

variables:
  # Default GHC / Cabal version. Used for generating Haddock and releasing to
  # Hackage.
  GHC_VERSION: 8.10.7

  # https://docs.gitlab.com/runner/executors/custom.html#system-failure
  GET_SOURCES_ATTEMPTS: 5
  RESTORE_CACHE_ATTEMPTS: 5
  ARTIFACT_DOWNLOAD_ATTEMPTS: 5

stages:
  - pre
  - test
  - pack
  - publish
  - post

haddock:
  extends: .common-local
  needs: []
  stage: test
  artifacts:
    paths:
      - hadocs/*/*
    expire_in: 1 month
  script:
    - .ci/build_docs.sh

# # Run benchmarks for isclashfastyet.com
# benchmark-8.10.2:
#   extends: .benchmark

# "Publish" a release candidate
hackage-release-candidate:
  extends: .hackage

  variables:
    HACKAGE_RELEASE: "no"

# We manually report status to GitHub to work around
# <https://gitlab.com/gitlab-org/gitlab/-/issues/216629>.
# The script will also send a Slack message when the nightly fails.
#
# If we ever remove this manual GitHub reporting, we may have to rethink the
# use of the interruptible flag: see <https://github.com/clash-lang/clash-compiler/pull/2616#discussion_r1409429185>
.report_status:
  # interruptible: false
  image: curlimages/curl
  dependencies: []
  variables:
    GIT_SUBMODULE_STRATEGY: recursive

set_pending:
  extends: .report_status
  stage: pre
  script:
    - .ci/report_status.sh pending

set_success:
  extends: .report_status
  stage: post
  when: on_success
  script:
    - .ci/report_status.sh success

set_failure:
  extends: .report_status
  stage: post
  when: on_failure
  script:
    - .ci/report_status.sh failure

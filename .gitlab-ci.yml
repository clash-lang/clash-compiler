include:
  - '/.ci/gitlab/common.yml'
  - '/.ci/gitlab/publish.yml'
#   - '/.ci/gitlab/benchmark.yml'

variables:
  # Default GHC / Cabal version. Used for generating Haddock and releasing to
  # Hackage.
  GHC_VERSION: 9.6.7

  # https://docs.gitlab.com/runner/executors/custom.html#system-failure
  GET_SOURCES_ATTEMPTS: 5
  RESTORE_CACHE_ATTEMPTS: 5
  ARTIFACT_DOWNLOAD_ATTEMPTS: 5

stages:
  - pre
  - test
  - pack
  - publish
  - post

tests:
  stage: test
  needs: []
  trigger:
    include: .ci/gitlab/test.yml
    strategy: depend
  variables:
    CI_PARENT_PIPELINE_SOURCE: $CI_PIPELINE_SOURCE
  parallel:
    matrix:
      - GHC_VERSION: 9.10.2
        # TODO: remove this when https://gitlab.haskell.org/ghc/ghc/-/merge_requests/12264#note_602406
        # is fixed
        SKIP_CLASH_FFI_EXAMPLE: "yes"
        RUN_TESTS: "always"

      - GHC_VERSION: 9.8.4
        # TODO: remove this when https://gitlab.haskell.org/ghc/ghc/-/merge_requests/12264#note_602406
        # is fixed
        SKIP_CLASH_FFI_EXAMPLE: "yes"
        RUN_TESTS: "always"

      - GHC_VERSION: 9.6.7
        RUN_TESTS: "always"

      - GHC_VERSION: [9.4.8, 9.2.8]
        RUN_TESTS: "nightly"

      - GHC_VERSION: 9.0.2
        WORKAROUND_GHC_MMAP_CRASH: "yes"
        RUN_TESTS: "always"

      - GHC_VERSION: [8.10.7, 8.8.4]
        WORKAROUND_GHC_MMAP_CRASH: "yes"
        RUN_TESTS: "nightly"

      - GHC_VERSION: 8.6.5
        WORKAROUND_GHC_MMAP_CRASH: "yes"
        MULTIPLE_HIDDEN: "no"
        RUN_TESTS: "always"

stack-build:
  extends: .common-local
  needs: []
  stage: test
  variables:
    GHC_VERSION: 8.10.7
  script:
    - .ci/stack_build.sh

nix-build:
  image: nixos/nix:2.10.1
  needs: []
  stage: test
  before_script:
   - nix-env -i gawk
  script:
    - .ci/setup_cachix.sh
    - nix-build -j$(./.ci/effective_cpus.sh) --log-format raw --max-silent-time 3600
    - nix-build | cachix push clash-lang
  tags:
    - local

haddock:
  extends: .common-local
  needs: []
  stage: test
  artifacts:
    paths:
      - hadocs/*/*
    expire_in: 1 month
  script:
    - .ci/build_docs.sh

# # Run benchmarks for isclashfastyet.com
# benchmark-8.10.2:
#   extends: .benchmark

# "Publish" a release candidate
hackage-release-candidate:
  extends: .hackage

  variables:
    HACKAGE_RELEASE: "no"

  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "trigger"

# Release new version of Clash to Hackage
hackage-release:
  extends: .hackage

  variables:
    HACKAGE_RELEASE: "yes"

  rules:
    - if: '$CI_COMMIT_TAG != null' # tags

# We manually report status to GitHub to work around
# <https://gitlab.com/gitlab-org/gitlab/-/issues/216629>.
# The script will also send a Slack message when the nightly fails.
#
# If we ever remove this manual GitHub reporting, we may have to rethink the
# use of the interruptible flag: see <https://github.com/clash-lang/clash-compiler/pull/2616#discussion_r1409429185>
.report_status:
  # interruptible: false
  image: curlimages/curl
  dependencies: []
  variables:
    GIT_SUBMODULE_STRATEGY: recursive

set_pending:
  extends: .report_status
  stage: pre
  script:
    - .ci/report_status.sh pending

set_success:
  extends: .report_status
  stage: post
  when: on_success
  script:
    - .ci/report_status.sh success

set_failure:
  extends: .report_status
  stage: post
  when: on_failure
  script:
    - .ci/report_status.sh failure

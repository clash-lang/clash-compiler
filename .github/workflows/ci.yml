name: CI

on:
  push:
    branches:
      # PRs can only use caches from their target branch. We therefore need to
      # make sure we run on 'master' too.
      - master
      - test-windows
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_mac_windows:
    name: Build and run limited tests
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ["macOS-13", "windows-latest", "ubuntu-latest"]
        ghc: ["9.8"]

    steps:
      - uses: actions/checkout@v4
      - uses: haskell-actions/setup@v2
        id: setup-haskell
        with:
          enable-stack: true
          stack-no-global: true

      - name: General Setup
        shell: bash
        run: |
          cp .ci/stack-${{ matrix.ghc }}.yaml stack.yaml
          # Print out stack.yaml for debugging purposes
          cat stack.yaml

      - name: Restore cache (Windows)
        if: ${{ startsWith(matrix.os, 'windows') }}
        uses: actions/cache/restore@v4
        id: cache-win
        with:
          # On windows we have to use "\" as a path separator, otherwise caching fails
          path: |
            ${{ steps.setup-haskell.outputs.stack-root }}\snapshots
          key: ${{ matrix.os }}-${{ matrix.ghc }}-${{ hashFiles('stack.yaml', '**/*.cabal', '.github/workflows/ci.yml') }}
          restore-keys: ${{ matrix.os }}-${{ matrix.ghc }}-
      - name: Restore cache (non-Windows)
        if: ${{ !startsWith(matrix.os, 'windows') }}
        uses: actions/cache/restore@v4
        id: cache-other
        with:
          path: |
            ${{ steps.setup-haskell.outputs.stack-root }}/snapshots
          key: ${{ matrix.os }}-${{ matrix.ghc }}-${{ hashFiles('stack.yaml', '**/*.cabal', '.github/workflows/ci.yml') }}
          restore-keys: ${{ matrix.os }}-${{ matrix.ghc }}-

      # https://gitlab.haskell.org/haskell/ghcup-hs/-/issues/188
      # https://github.com/commercialhaskell/stack/issues/4937
      # - name: Use system GHC
      #   run: stack config set system-ghc --global true

      # Retry Stack initialization, see:
      # https://github.com/commercialhaskell/stack/issues/5770
      - name: Initialize Stack
        shell: bash
        run: ./.ci/retry.sh stack build base

      # Building 'happy' sometimes fails on Windows for some obscure reason
      - name: Build happy with Stack
        shell: bash
        run: ./.ci/retry.sh stack build happy

      - name: Build dependencies
        run: stack build --only-dependencies

      - name: Save cache (Windows)
        uses: actions/cache/save@v4
        # Trying to save over an existing cache gives distracting
        # "Warning: Cache save failed." since they are immutable
        if: ${{ startsWith(matrix.os, 'windows') && steps.cache-win.outputs.cache-hit != 'true' }}
        with:
          # On windows we have to use "\" as a path separator, otherwise caching fails
          path: |
            ${{ steps.setup-haskell.outputs.stack-root }}\snapshots
          key: ${{ matrix.os }}-${{ matrix.ghc }}-${{ hashFiles('stack.yaml', '**/*.cabal', '.github/workflows/ci.yml') }}
      - name: Save cache (non-Windows)
        uses: actions/cache/save@v4
        # Trying to save over an existing cache gives distracting
        # "Warning: Cache save failed." since they are immutable
        if: ${{ !startsWith(matrix.os, 'windows') && steps.cache-other.outputs.cache-hit != 'true' }}
        with:
          path: |
            ${{ steps.setup-haskell.outputs.stack-root }}/snapshots
          key: ${{ matrix.os }}-${{ matrix.ghc }}-${{ hashFiles('stack.yaml', '**/*.cabal', '.github/workflows/ci.yml') }}

      # Note: the --pedantic switch adds -Wall -Werror to the options passed to
      # GHC. Options specified in stack.yaml (like -Wcompat) are still passed;
      # it is cumulative. Future versions of Stack might add behavior to
      # --pedantic.
      - name: Build with Stack
        run: stack build --pedantic

      - name: Run Vector testsuite
        if: github.ref != 'refs/heads/master'
        run: stack run -- clash-testsuite --hide-successes -p .Vector. --no-ghdl --no-verilator --no-modelsim --no-vivado --no-iverilog

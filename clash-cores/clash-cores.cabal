cabal-version:       2.2

name:                clash-cores
version:             1.8.3
synopsis:            A collection of IP cores for Clash
description:         A collection of IP cores for Clash
bug-reports:         https://github.com/clash-lang/clash-cores/issues
license:             BSD-2-Clause
license-file:        LICENSE
author:              QBayLogic B.V.
maintainer:          devops@qbaylogic.com
copyright:           Copyright Â© 2019     , Foamspace Corp.,
                                 2022-2023, QBayLogic B.V.
category:            Hardware
-- TODO: Revert to "Simple". See:
--
--   https://github.com/clash-lang/clash-compiler/pull/2665#issuecomment-1939044550
build-type:          Custom
extra-source-files:  CHANGELOG.md

flag doctests
  description:
    You can disable testing with doctests using `-f-doctests`.
  default: True
  manual: True

flag unittests
  description:
    You can disable testing with unittests using `-f-unittests`.
  default: True
  manual: True

flag haddock
  description:
    Work-around haddock bug on GHC 8.6.*
  default: False
  manual: True

flag nix
  description:
    Are we building this package from nix
  default: False
  manual: True

-- TODO: Remove this workaround. See:
--
--   https://github.com/clash-lang/clash-compiler/pull/2665#issuecomment-1939044550
custom-setup
  setup-depends:
    base,
    Cabal

common basic-config
  default-language: Haskell2010

  default-extensions:
    BinaryLiterals
    DataKinds
    DefaultSignatures
    DeriveAnyClass
    DeriveGeneric
    DerivingStrategies
    FlexibleContexts
    MagicHash
    NoImplicitPrelude
    PostfixOperators
    NoStarIsType
    ScopedTypeVariables
    TemplateHaskell
    TypeApplications
    TypeFamilies
    TypeOperators

  -- See https://github.com/clash-lang/clash-compiler/pull/2511
  if impl(ghc >= 9.4)
    CPP-Options: -DCLASH_OPAQUE=OPAQUE
  else
    CPP-Options: -DCLASH_OPAQUE=NOINLINE

  ghc-options:
    -Wall -Wcompat

  if flag(haddock)
    ghc-options:
      -fdefer-type-errors
  elif flag(nix)
    -- It's absolutely grimy, but if we don't specify the `-package` flags here
    -- then when nix eventually calls `./Setup register` on the package it will
    -- still pass the `-fplugin` options to GHC and fail to create the package
    -- registation file needed to finish the `installPhase`.
    --
    -- These flags are something we NEVER want to manually specify in a normal
    -- build, since correctly configuring this kind of thing should be solely
    -- left to cabal as a build tool.
    ghc-options:
      -package ghc-typelits-extra
      -fplugin GHC.TypeLits.Extra.Solver
      -package ghc-typelits-knownnat
      -fplugin GHC.TypeLits.Normalise
      -package ghc-typelits-natnormalise
      -fplugin GHC.TypeLits.KnownNat.Solver
  else
    ghc-options:
      -fplugin GHC.TypeLits.Extra.Solver
      -fplugin GHC.TypeLits.Normalise
      -fplugin GHC.TypeLits.KnownNat.Solver

  build-depends:
    base                      >= 4.10  && < 5,
    clash-prelude,
    constraints,
    containers                >=0.5    && <0.8,
    ghc-typelits-extra        >= 0.3.2,
    ghc-typelits-knownnat     >= 0.6,
    ghc-typelits-natnormalise >= 0.6,
    lens,
    QuickCheck,
    string-interpolate        ^>= 0.3,
    template-haskell,

library
  import: basic-config
  hs-source-dirs: src

  exposed-modules:
    Clash.Cores.Xilinx.Internal
    Clash.Cores.Xilinx.BlockRam
    Clash.Cores.Xilinx.BlockRam.BlackBoxes
    Clash.Cores.Xilinx.BlockRam.Internal
    Clash.Cores.Xilinx.DcFifo
    Clash.Cores.Xilinx.DcFifo.Internal.BlackBoxes
    Clash.Cores.Xilinx.DcFifo.Internal.Instances
    Clash.Cores.Xilinx.DcFifo.Internal.Types
    Clash.Cores.Xilinx.Ila
    Clash.Cores.Xilinx.Ila.Internal
    Clash.Cores.Xilinx.VIO
    Clash.Cores.Xilinx.VIO.Internal.BlackBoxes
    Clash.Cores.Xilinx.Floating
    Clash.Cores.Xilinx.Floating.Annotations
    Clash.Cores.Xilinx.Floating.BlackBoxes
    Clash.Cores.Xilinx.Floating.Explicit
    Clash.Cores.Xilinx.Floating.Internal
    Clash.Cores.Xilinx.Xpm
    Clash.Cores.Xilinx.Xpm.Cdc
    Clash.Cores.Xilinx.Xpm.Cdc.ArraySingle
    Clash.Cores.Xilinx.Xpm.Cdc.ArraySingle.Internal
    Clash.Cores.Xilinx.Xpm.Cdc.Gray
    Clash.Cores.Xilinx.Xpm.Cdc.Gray.Internal
    Clash.Cores.Xilinx.Xpm.Cdc.Handshake
    Clash.Cores.Xilinx.Xpm.Cdc.Handshake.Internal
    Clash.Cores.Xilinx.Xpm.Cdc.Single
    Clash.Cores.Xilinx.Xpm.Cdc.Single.Internal
    Clash.Cores.SPI
    Clash.Cores.UART
    Clash.Cores.LatticeSemi.ICE40.IO
    Clash.Cores.LatticeSemi.ICE40.Blackboxes.IO
    Clash.Cores.LatticeSemi.ECP5.IO
    Clash.Cores.LatticeSemi.ECP5.Blackboxes.IO

  other-modules:
    Data.Text.Extra

  ghc-options:
    -fexpose-all-unfoldings
    -fno-worker-wrapper

  build-depends:
    clash-lib,
    infinite-list           ^>= 0.1,
    ghc-prim                >= 0.3.1.0 && < 1.0,
    mtl                     >= 2.1.1 && < 2.4,
    pretty-show,
    prettyprinter           >= 1.2.0.1  && < 1.8,
    prettyprinter-interp    ^>= 0.2,
    reducers                >= 3.12.2 && < 4.0,
    text                    >= 1.2.2 && < 2.2

test-suite unittests
  import: basic-config
  hs-source-dirs: test
  type: exitcode-stdio-1.0
  main-is: unittests.hs

  if !flag(unittests)
    buildable: False

  other-Modules:
    Test.Cores.Internal.SampleSPI
    Test.Cores.Internal.Signals
    Test.Cores.SPI
    Test.Cores.SPI.MultiSlave
    Test.Cores.UART
    Test.Cores.Xilinx.BlockRam
    Test.Cores.Xilinx.DcFifo

  build-depends:
    clash-cores,
    clash-lib,
    clash-prelude-hedgehog,
    deepseq,
    tasty        >= 1.2 && < 1.6,
    tasty-hunit,
    tasty-quickcheck,
    tasty-th,
    hedgehog,
    tasty-hedgehog >= 1.2.0,
    infinite-list

test-suite doctests
  type:             exitcode-stdio-1.0
  default-language: Haskell2010
  main-is:          doctests.hs
  ghc-options:      -Wall -Wcompat -threaded
  hs-source-dirs:   test

  if !flag(doctests)
    buildable: False
  else
    build-depends:
      base,
      clash-cores,
      doctest-parallel >= 0.2 && < 0.4,
      filepath
